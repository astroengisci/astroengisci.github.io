Usage:
    Enter your rules into the box.
    Press "Generate!"
    PyConlangWordGen will generate 20 words according to your rules.

Constructing Rule Files:
    A rules file is constructed of headers, followed by a newline, followed
    by a series of parameters for each header. The headers are:
        -CATEGORIES
        -SYLLABLES
        -ILLEGAL
        -ILLEGALEXCEPTIONS
        -REWRITE
        -PARAMS
    The headers can appear in any order. All but -CATEGORIES and -SYLLABLES
    are optional. Each parameter within each section is separated by a newline.

    You can usually have whatever whitespace in each line in order to organize
    things in a way that makes sense to you; the program strips out whitespace
    before and after each line, and removes whitespace inside category definitions,
    rewrite rules, and parameter settings. However, A BLANK LINE IS ALWAYS TREATED
    AS THE END OF THE SECTION. This includes lines containing nothing but whitespace.

    NOTE: In all categories, "#" is interpreted as the beginning of the word,
    and "%" as the end of the word.

    See samplelanguage.txt for a working example. Bonus points if you can
    figure out what language it's trying to simulate!

    -CATEGORIES specifies a list of different phonemic categories that are used
    to generate words and check illegal clusters.
    Categories are specified as a SINGLE LETTER, followed by a colon, and a
    string of phonemes (not separated in any way). EACH PHONEME MUST BE A
    SINGLE CHARACTER. If your orthography requires digraphs, trigraphs, or
    (heaven forbid), anything higher than that, use rewrite rules.

    Any character encountered in any section that isn't defined as a category
    will be treated as a literal character.

    Example categories section:
        -CATEGORIES
        C:ptkbdg
        V:aeiou
        r:r

    -SYLLABLES specifies every possible syllable in your language by category.
    
    Example syllables section:
        -SYLLABLES
        CV
        CVC
        VVC
        CrC

    -ILLEGAL specifies every illegal cluster in your language by category.
    These can be as long as you want.

    Example illegal section:
        -ILLEGAL
        Vr
        SF
        CF
        FC

    -ILLEGALEXCEPTIONS specifies exceptions to the illegality rules.
    You can even specify environments in which otherwise illegal clusters are
    acceptable (note that these environments can only extend one character in
    either direction).
    
    Example illegal exceptions section:
        -ILLEGALEXCEPTIONS
        ts
        st
        ar
        sn
        #Vr
        sVr

    -REWRITE specifies rewrite rules if your language uses digraphs.
    Rewrite rules take the form "inp|outp". The program will substitute any string
    "inp" for the string "outp". So, if your language uses the digraph "ch", you
    could specify it as "c" in the categories section, and use the rewrite rule
    "c|ch". You can even specify specific categories to replace.

    You can also specify a blank output string, and the program will remove every
    occurrence of the string.
    Rewrite rules are applied in the order they are defined.

    Example rewrite section:
        -REWRITE
        c|ch
        q|au
        8|sch

    -PARAMS allows you to specify language-specific parameters. For example,
    in some languages monosyllabic words are uncommon or impossible.
    Parameters are specified with the parameter name, followed by an equals sign,
    followed by the value.

    You can specify the following parameters. Each is presented along with its
    default value, along with comments explaining its function.
        -PARAMS
        minsylls=1                  #Smallest number of syllables that can occur in a word
        maxsylls=3                  #Largest number of syllables that can occur in a word
        showrejected=False          #Show words deemed illegal.
        show_pre_rewrite=False      #Show words before applying the rewriting rules.
        show_rewrite_trigger=False  #Print a message every time a rewrite rule is applied.
        never_generate_list=None    #Specify a file containing a list of words treated as illegal (separated by newlines). Useful for suppressing homophones.
